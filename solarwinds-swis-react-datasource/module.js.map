{"version":3,"file":"module.js","mappings":"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","sources":["webpack://solarwinds-swis-react-datasource/external amd \"@grafana/ui\"","webpack://solarwinds-swis-react-datasource/../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://solarwinds-swis-react-datasource/external amd \"rxjs\"","webpack://solarwinds-swis-react-datasource/../node_modules/css-loader/dist/runtime/api.js","webpack://solarwinds-swis-react-datasource/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://solarwinds-swis-react-datasource/external amd \"module\"","webpack://solarwinds-swis-react-datasource/../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://solarwinds-swis-react-datasource/./styles/QueryEditor.css","webpack://solarwinds-swis-react-datasource/external amd \"@grafana/runtime\"","webpack://solarwinds-swis-react-datasource/./datasource.ts","webpack://solarwinds-swis-react-datasource/external amd \"@grafana/data\"","webpack://solarwinds-swis-react-datasource/../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://solarwinds-swis-react-datasource/../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://solarwinds-swis-react-datasource/../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://solarwinds-swis-react-datasource/external amd \"react\"","webpack://solarwinds-swis-react-datasource/../node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://solarwinds-swis-react-datasource/webpack/bootstrap","webpack://solarwinds-swis-react-datasource/webpack/runtime/compat get default export","webpack://solarwinds-swis-react-datasource/webpack/runtime/define property getters","webpack://solarwinds-swis-react-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://solarwinds-swis-react-datasource/webpack/runtime/make namespace object","webpack://solarwinds-swis-react-datasource/webpack/runtime/publicPath","webpack://solarwinds-swis-react-datasource/webpack/runtime/nonce","webpack://solarwinds-swis-react-datasource/./node_modules/grafana-public-path.js","webpack://solarwinds-swis-react-datasource/./types.ts","webpack://solarwinds-swis-react-datasource/./styles/QueryEditor.css?e241","webpack://solarwinds-swis-react-datasource/./components/AnnotationQueryEditor.tsx","webpack://solarwinds-swis-react-datasource/./module.ts","webpack://solarwinds-swis-react-datasource/./components/ConfigEditor.tsx","webpack://solarwinds-swis-react-datasource/./components/QueryEditor.tsx"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","module.exports = __WEBPACK_EXTERNAL_MODULE__269__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__308__;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.generic-datasource-query-row .query-keyword {\n  width: 75px;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./styles/QueryEditor.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAW;AACb\",\"sourcesContent\":[\".generic-datasource-query-row .query-keyword {\\n  width: 75px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  MutableDataFrame,\n  FieldType,\n  MetricFindValue,\n  ScopedVars,\n} from '@grafana/data';\nimport { getBackendSrv, getTemplateSrv } from '@grafana/runtime';\nimport { lastValueFrom } from 'rxjs';\nimport _ from 'lodash';\nimport { SwisQuery, SwisDataSourceOptions, QueryMetadata, Column } from './types';\n\nexport class SwisDatasource extends DataSourceApi<SwisQuery, SwisDataSourceOptions> {\n  url: string;\n  withCredentials: boolean;\n  headers: Record<string, string>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<SwisDataSourceOptions>) {\n    super(instanceSettings);\n    this.url = instanceSettings.url || '';\n    this.withCredentials = instanceSettings.withCredentials || false;\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  async testDatasource() {\n    try {\n      const response = await this.doRequest({\n        url: this.url + '/Query?query=SELECT Description FROM System.NullEntity',\n        method: 'GET',\n      });\n      \n      if (response.status === 200) {\n        return {\n          status: 'success',\n          message: 'Data source is working :)',\n          title: 'Success',\n        };\n      }\n      \n      return {\n        status: 'error',\n        message: `Error connecting to SWIS: ${response.statusText}`,\n        title: 'Error',\n      };\n    } catch (err) {\n      return {\n        status: 'error',\n        message: `Error connecting to SWIS: ${err}`,\n        title: 'Error',\n      };\n    }\n  }\n\n  interpolateVariable(value: any, variable: any) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value.replace(/'/g, `''`) + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return value;\n  }\n\n  async query(options: DataQueryRequest<SwisQuery>): Promise<DataQueryResponse> {\n    const queries = options.targets\n      .filter(item => !item.hide)\n      .map(item => {\n        return {\n          refId: item.refId,\n          intervalMs: options.intervalMs,\n          maxDataPoints: options.maxDataPoints,\n          rawSql: item.rawSql,\n          format: item.format,\n        };\n      });\n\n    if (queries.length === 0) {\n      return { data: [] };\n    }\n\n    try {\n      const promises = queries.map(query => this.doQuery(query, options));\n      const results = await Promise.all(promises);\n      const data = results.flat();\n      \n      return { data };\n    } catch (error) {\n      console.error('Query error:', error);\n      throw error;\n    }\n  }\n\n  async doQuery(query: any, options: DataQueryRequest<SwisQuery>) {\n    // Process SWQL\n    let swql = query.rawSql;\n    swql = swql.replace(/\\$from/g, '@timeFrom');\n    swql = swql.replace(/\\$to/g, '@timeTo');    \n\n    swql = getTemplateSrv().replace(swql, options.scopedVars, this.interpolateVariable);\n\n    query.rawSql = swql;    \n\n    const param = {\n      query: this.resolveMacros(query.rawSql, options),\n      parameters: {\n        timeFrom: options.range ? options.range.from.toISOString() : '',\n        timeTo: options.range ? options.range.to.toISOString() : '',\n        granularity: Math.max(Math.floor((options.intervalMs || 0) / 1000), 1),\n      }\n    };    \n    \n    query.options = options;\n\n    try {\n      // First get metadata\n      const metadataResponse = await this.doRequest({\n        url: this.url + '/Query', \n        method: 'POST',\n        data: {\n          query: param.query + \" WITH SCHEMAONLY\",\n          parameters: param.parameters\n        }\n      });\n      \n      this.processMetadata(metadataResponse, query);\n      \n      // Then get the actual data\n      const dataResponse = await this.doRequest({\n        url: this.url + '/Query', \n        method: 'POST',\n        data: param\n      });\n      \n      return this.processQueryResult(dataResponse, query);\n    } catch (error) {\n      console.error('Error executing query:', error);\n      throw error;\n    }\n  }\n\n  timeSpan(ms: number): string {\n    const obj = {\n      ms: ms % 1000,\n      ss: Math.floor(ms / 1000) % 60,\n      mm: Math.floor(ms / (1000 * 60)) % 60,\n      hh: Math.floor(ms / (1000 * 60 * 60)) % 24,\n      dd: Math.floor(ms / (1000 * 60 * 60 * 24))\n    };\n    return obj.dd + '.' + obj.hh + ':' + obj.mm + ':' + obj.ss + '.' + obj.ms;\n  }\n\n  resolveMacros(rawSql: string, options: DataQueryRequest<SwisQuery>): string {\n    // downsample(variable) is translated into - ADDSECOND(FLOOR(SecondDiff('1970-01-01T00:00:00', LastSync) / [granularity] + 1) * [granularity], '1970-01-01T00:00:00')\n    const r = /downsample\\(([^\\)]*)*\\)/g;\n\n    rawSql = rawSql.replace(r, (match, group) => {\n      return \"ADDSECOND(FLOOR(SecondDiff('1970-01-01T00:00:00', \"+group+\")/@granularity+1)*@granularity, '1970-01-01T00:00:00')\";\n    });\n    \n    // add sampling to all queries as it's harmless\n    if (rawSql.indexOf('GRANULARITY') === -1 && rawSql.indexOf('downsample') !== -1) {\n      rawSql += \" WITH GRANULARITY '\" + this.timeSpan(options.intervalMs || 0) + \"'\";\n    }\n\n    return rawSql;\n  }\n\n  processMetadata(res: any, query: any): void {\n    const columns: Column[] = [];\n    const metadata: QueryMetadata = {\n      timeColumnIndex: -1,\n      metricIndex: -1,\n      columns: columns\n    };\n\n    for (const row of res.data.results) {\n      if (row.DataType.indexOf('String') !== -1) {\n        metadata.metricIndex = row.Index;\n      } else if (row.DataType.indexOf('DateTime') !== -1) {\n        metadata.timeColumnIndex = row.Index;\n      }      \n\n      columns.push({\n        index: row.Index,\n        name: row.Alias,\n        type: this.translateType(row.DataType)\n      });\n    }\n\n    // metric has limitations on data output\n    if (query.format === 'time_series') {\n      if (columns.length < 2) {\n        throw new Error('There has to be at least 2 columns defined for Series');\n      }\n\n      if (metadata.timeColumnIndex === -1) {\n        throw new Error('Missing DateTime column which is needed for Series');\n      }\n    }\n\n    // set metadata to query\n    query.metadata = metadata;\n  }\n\n  translateType(type: string): string {\n    // Translate SWIS type to grafana types\n    if (type.indexOf('Int') !== -1 || type.indexOf('Double') !== -1 || type.indexOf('Decimal') !== -1) {\n      return FieldType.number;\n    } else if (type.indexOf('DateTime') !== -1) {\n      return FieldType.time;\n    } else if (type.indexOf('Boolean') !== -1) {\n      return FieldType.boolean;\n    }\n    return FieldType.string;\n  }\n\n  processQueryResult(res: any, query: any) {\n    if (query.format === 'table') {\n      return this.processQueryResultTable(res, query);\n    }\n    else if (query.format === 'time_series') {\n      return this.processQueryResultMetric(res, query);\n    }\n    else if (query.format === 'search') {\n      return this.processQueryResultSearch(res, query);\n    }\n    else if (query.format === 'annotation') {\n      return this.processQueryResultAnnotation(res, query);\n    }\n    else {    \n      throw new Error('Unknown query format [' + query.format + ']');\n    }\n  }\n\n  processQueryResultAnnotation(res: any, query: any) {\n    const metadata = query.metadata;\n    let timeIndex = metadata.columns.findIndex((n: Column) => n.name === 'time');\n    if (timeIndex === -1) timeIndex = metadata.timeColumnIndex;\n    \n    let textIndex = metadata.columns.findIndex((n: Column) => n.name === 'text');\n    if (textIndex === -1) textIndex = metadata.metricIndex;\n    \n    const tagsIndex = metadata.columns.findIndex((n: Column) => n.name === 'tags');\n\n    if (timeIndex === -1) {\n      throw new Error('Missing mandatory column DateTime column or named [time]');\n    }\n\n    return res.data.results.map((rowData: any) => \n      Object.keys(rowData).map(n => rowData[n])\n    ).map((row: any) => {\n      return {\n        annotation: query.options.annotation,\n        time: this.correctTime(row[timeIndex]),\n        text: row[textIndex],\n        tags: row[tagsIndex] ? row[tagsIndex].trim().split(/\\s*,\\s*/) : []\n      };\n    });\n  }\n\n  processQueryResultSearch(res: any, query: any): MetricFindValue[] {\n    const metadata = query.metadata;\n    const textIndex = metadata.columns.findIndex((n: Column) => n.name === '__text');\n    const valueIndex = metadata.columns.findIndex((n: Column) => n.name === '__value');\n    \n    if (metadata.columns.length === 2 && textIndex !== -1 && valueIndex !== -1) {\n      const text = metadata.columns[textIndex];\n      const value = metadata.columns[valueIndex];\n      \n      return res.data.results\n        .map((rowData: any) => Object.keys(rowData).map(n => rowData[n]))\n        .map((row: any) => {\n          return {\n            text: row[text.index],\n            value: row[value.index]\n          };\n        });\n    } else {\n      throw new Error('Specify __text and __value column');      \n    }\n  }\n\n  processQueryResultTable(res: any, query: any) {\n    const frame = new MutableDataFrame({\n      refId: query.refId,\n      fields: query.metadata.columns.map((col: Column) => ({\n        name: col.name,\n        type: col.type as FieldType,\n      })),\n    });\n\n    res.data.results.forEach((rowData: any) => {\n      const row = Object.keys(rowData).map(n => rowData[n]);\n      frame.appendRow(row);\n    });\n\n    return [frame];\n  }\n\n  correctTime(dtString: string): number {\n    // SWIS sometimes return time including time zone 02:00:34.675+3:00 instead of pure UTC      \n    let dtZoneIndex = dtString.indexOf('+');            \n    if (dtZoneIndex !== -1) {        \n      dtString = dtString.substring(0, dtZoneIndex) + 'Z';\n    }\n    else if (dtString.lastIndexOf('Z') !== dtString.length-1) {\n      dtString += 'Z';\n    }\n      \n    return Date.parse(dtString);\n  }\n\n  processQueryResultMetric(res: any, query: any) {\n    const metadata = query.metadata;\n    const frames: MutableDataFrame[] = [];\n    const series: Record<string, MutableDataFrame> = {};\n\n    for (const rowData of res.data.results) {\n      const row = Object.keys(rowData).map(n => rowData[n]);\n      const date = this.correctTime(row[metadata.timeColumnIndex]);\n      \n      for (let i = 0; i < metadata.columns.length; i++) {\n        if (i === metadata.timeColumnIndex || i === metadata.metricIndex) {\n          continue;\n        }\n\n        let serieName = '';\n\n        if (metadata.metricIndex !== -1) {\n          serieName = row[metadata.metricIndex];\n        }\n\n        if (metadata.columns.length > 3 || serieName === '') {\n          if (serieName !== '') {\n            serieName += '-';\n          }\n\n          serieName += metadata.columns[i].name;\n        }\n\n        let frame = series[serieName];\n\n        if (!frame) {\n          frame = new MutableDataFrame({\n            refId: query.refId,\n            name: serieName,\n            fields: [\n              { name: 'Time', type: FieldType.time },\n              { name: 'Value', type: FieldType.number },\n            ],\n          });\n          series[serieName] = frame;\n          frames.push(frame);\n        }\n\n        const value = row[i];\n        frame.appendRow([date, value]);\n      }\n    }\n\n    return frames;\n  }\n\n  async annotationQuery(options: any) {\n    if (!options.annotation.query) {\n      throw new Error('Query missing in annotation definition');\n    }\n\n    const query = {\n      rawSql: options.annotation.query,\n      format: 'annotation',\n      metadata: {}\n    };\n    \n    return this.doQuery(query, options);\n  }\n\n  async metricFindQuery(rawSql: string, options?: any): Promise<MetricFindValue[]> {\n    const query = {\n      rawSql: rawSql,\n      format: 'search',\n      metadata: {}\n    };\n    \n    const defaultOptions = {\n      intervalMs: 0,\n      range: {\n        from: '',\n        to: ''\n      },\n      scopedVars: {}\n    };\n\n    return this.doQuery(query, { ...defaultOptions, ...options });\n  }\n\n  applyTemplateVariables(query: SwisQuery, scopedVars: ScopedVars): SwisQuery {\n    return {\n      ...query,\n      rawSql: getTemplateSrv().replace(query.rawSql, scopedVars, this.interpolateVariable),\n    };\n  }\n\n  async doRequest(options: any) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    try {\n      return await lastValueFrom(getBackendSrv().fetch(options));\n    } catch (error: any) {\n      console.error('Request failed:', error);\n      \n      if (error.status === 404) {\n        throw new Error('SWIS service is not available');\n      }\n\n      // Some query exception\n      if (error.data?.Message) {\n        throw new Error(error.data.Message);\n      }\n      \n      throw error;\n    }\n  }\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/solarwinds-swis-react-datasource/\";","__webpack_require__.nc = undefined;","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/solarwinds-swis-react-datasource/';\n","import { DataQuery, DataSourceJsonData } from '@grafana/data';\n\nexport interface SwisQuery extends DataQuery {\n  format: string;\n  rawSql: string;\n  refId: string;\n}\n\nexport interface QueryMeta {\n  sql: string;\n}\n\nexport const defaultQuery: Partial<SwisQuery> = {\n  format: 'time_series',\n  rawSql: `SELECT TOP 5\n     LastSync, \n     Caption,\n     CPULoad, \n     ResponseTime \nFROM\n     Orion.Nodes`\n};\n\nexport interface SwisDataSourceOptions extends DataSourceJsonData {\n  url?: string;\n}\n\nexport interface SwisSecureJsonData {\n  basicAuth?: string;\n}\n\nexport interface Column {\n  index: number;\n  name: string;\n  type: string;\n}\n\nexport interface QueryMetadata {\n  timeColumnIndex: number;\n  metricIndex: number;\n  columns: Column[];\n}","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./QueryEditor.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./QueryEditor.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { Input, InlineField } from '@grafana/ui';\n\ninterface Props {\n  query: string;\n  onChange: (query: string) => void;\n}\n\nexport const AnnotationQueryEditor = ({ query, onChange }: Props) => {\n  return (\n    <div className=\"gf-form-group\">\n      <h5 className=\"section-heading\">Query</h5>\n      <InlineField grow>\n        <Input\n          value={query || ''}\n          onChange={e => onChange(e.currentTarget.value)}\n          placeholder=\"Enter a SWQL query\"\n        />\n      </InlineField>\n    </div>\n  );\n};","import { DataSourcePlugin } from '@grafana/data';\nimport { SwisDatasource } from './datasource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { AnnotationQueryEditor } from './components/AnnotationQueryEditor';\nimport { SwisQuery, SwisDataSourceOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<SwisDatasource, SwisQuery, SwisDataSourceOptions>(SwisDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setAnnotationQueryCtrl(AnnotationQueryEditor);","import React from 'react';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { SwisDataSourceOptions, SwisSecureJsonData } from '../types';\n\nexport function ConfigEditor(props: DataSourcePluginOptionsEditorProps<SwisDataSourceOptions, SwisSecureJsonData>) {\n  const { onOptionsChange, options } = props;\n\n  return (\n    <DataSourceHttpSettings\n      defaultUrl=\"https://localhost:17778/SolarWinds/InformationService/v3/Json/\"\n      dataSourceConfig={options}\n      onChange={onOptionsChange}\n    />\n  );\n}","import React, { useState } from 'react';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { CodeEditor, InlineField, Select, Button, Alert, useTheme2 } from '@grafana/ui';\nimport { SwisDatasource } from '../datasource';\nimport { SwisDataSourceOptions, SwisQuery, defaultQuery } from '../types';\nimport '../styles/QueryEditor.css';\n\ntype Props = QueryEditorProps<SwisDatasource, SwisQuery, SwisDataSourceOptions>;\n\nexport function QueryEditor({ query, onChange, onRunQuery, datasource }: Props) {\n  const theme = useTheme2();\n  const [showLastQuerySQL, setShowLastQuerySQL] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  const [lastQueryMeta, setLastQueryMeta] = useState<any>(null);\n  const [lastQueryError, setLastQueryError] = useState<string | null>(null);\n\n  const formats: Array<SelectableValue<string>> = [\n    { label: 'Time series', value: 'time_series' },\n    { label: 'Table', value: 'table' },\n  ];\n\n  // Initialize query with defaults if needed\n  const swisQuery = {\n    ...defaultQuery,\n    ...query,\n  };\n\n  const onFormatChange = (value: SelectableValue<string>) => {\n    onChange({ ...swisQuery, format: value.value || 'time_series' });\n    onRunQuery();\n  };\n\n  const onSqlChange = (value: string) => {\n    onChange({ ...swisQuery, rawSql: value });\n  };\n\n  const onQueryBlur = () => {\n    onRunQuery();\n  };\n\n  return (\n    <div className=\"gf-form-inline\">\n      <div className=\"gf-form-inline\">\n        <div className=\"gf-form gf-form--grow\">\n          <CodeEditor\n            language=\"sql\"\n            value={swisQuery.rawSql || ''}\n            onBlur={onQueryBlur}\n            onChange={onSqlChange}\n            height=\"200px\"\n            showMiniMap={false}\n            showLineNumbers={true}\n          />\n        </div>\n      </div>\n\n      <div className=\"gf-form-inline\">\n        <InlineField label=\"Format as\" labelWidth={16}>\n          <Select\n            options={formats}\n            value={formats.find(f => f.value === swisQuery.format)}\n            onChange={onFormatChange}\n            width={16}\n          />\n        </InlineField>\n\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={() => setShowHelp(!showHelp)}\n          icon={showHelp ? 'angle-down' : 'angle-right'}\n        >\n          Show Help\n        </Button>\n\n        {lastQueryMeta && (\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => setShowLastQuerySQL(!showLastQuerySQL)}\n            icon={showLastQuerySQL ? 'angle-down' : 'angle-right'}\n          >\n            Generated SWQL\n          </Button>\n        )}\n      </div>\n\n      {showLastQuerySQL && lastQueryMeta && (\n        <div className=\"gf-form\">\n          <pre className=\"gf-form-pre\">{lastQueryMeta.sql}</pre>\n        </div>\n      )}\n\n      {showHelp && (\n        <Alert title=\"SWIS Query Help\" severity=\"info\">\n          <pre>\n            {`Time series:\nWrite SWQL queries to be used as Metric series or regular table. For Series there has to be defined time column. \nAs metric is taken first string column or next data column in row. In case there's multiple data columns, each column is taken as metrix suffix\n\nOptional:\n  - return column named metric to represent the series name.\n  - If multiple value columns are returned the metric column is used as prefix.\n  - If no column named metric is found the column name of the value column is used as series name\n\nTable:\n- return any set of columns\n\nGrafana macros to use:\n- $from - time interval start\n- $to - time interval end\n\nTime Series:\n- for sampling you must use function downsample([timecolumn]). TimeInterval is used from grafanata $__interval variable\n- you must also sort result by time\n\nExample time series query:\nSELECT\n     downsample(ObservationTimeStamp) as time,\n     a.Node.Caption,\n     AVG(AvgLoad) as CpuLoad,\n     AVG(AvgMemoryUsed) as MemoryUsed\nFROM Orion.CPULoad a\nWHERE ObservationTimeStamp BETWEEN $from AND $to\nGROUP BY downsample(ObservationTimeStamp), a.Node.Caption, a.NodeID\nORDER BY time DESC`}\n          </pre>\n        </Alert>\n      )}\n\n      {lastQueryError && (\n        <Alert title=\"Query Error\" severity=\"error\">\n          {lastQueryError}\n        </Alert>\n      )}\n    </div>\n  );\n}"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__7__","options","element","document","createElement","setAttributes","attributes","insert","__WEBPACK_EXTERNAL_MODULE__269__","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","id","_k","push","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","__WEBPACK_EXTERNAL_MODULE__308__","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","___CSS_LOADER_EXPORT___","__WEBPACK_EXTERNAL_MODULE__531__","SwisDatasource","DataSourceApi","testDatasource","response","doRequest","url","method","status","message","title","statusText","err","interpolateVariable","value","variable","multi","includeAll","replace","query","queries","targets","filter","hide","refId","intervalMs","maxDataPoints","rawSql","format","data","promises","doQuery","results","Promise","all","flat","error","console","swql","getTemplateSrv","scopedVars","param","resolveMacros","parameters","timeFrom","range","from","toISOString","timeTo","to","granularity","Math","max","floor","metadataResponse","processMetadata","dataResponse","processQueryResult","timeSpan","ms","match","group","indexOf","res","columns","metadata","timeColumnIndex","metricIndex","row","DataType","Index","name","Alias","type","translateType","FieldType","number","time","boolean","string","processQueryResultTable","processQueryResultMetric","processQueryResultSearch","processQueryResultAnnotation","timeIndex","findIndex","n","textIndex","tagsIndex","rowData","Object","keys","annotation","correctTime","text","tags","trim","split","valueIndex","frame","MutableDataFrame","fields","col","forEach","appendRow","dtString","dtZoneIndex","substring","lastIndexOf","Date","parse","frames","series","date","serieName","annotationQuery","metricFindQuery","applyTemplateVariables","withCredentials","headers","lastValueFrom","getBackendSrv","fetch","Message","constructor","instanceSettings","super","basicAuth","__WEBPACK_EXTERNAL_MODULE__781__","styleElement","nonce","setAttribute","insertStyleElement","btoa","unescape","encodeURIComponent","JSON","stringify","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","cssMapping","base64","sourceMapping","__WEBPACK_EXTERNAL_MODULE__959__","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","p","nc","slice","defaultQuery","locals","plugin","DataSourcePlugin","setConfigEditor","props","onOptionsChange","DataSourceHttpSettings","defaultUrl","dataSourceConfig","onChange","setQueryEditor","onRunQuery","datasource","useTheme2","showLastQuerySQL","setShowLastQuerySQL","useState","showHelp","setShowHelp","lastQueryMeta","setLastQueryMeta","lastQueryError","setLastQueryError","formats","label","swisQuery","div","className","CodeEditor","language","onBlur","height","showMiniMap","showLineNumbers","InlineField","labelWidth","Select","find","f","width","Button","variant","size","onClick","icon","pre","sql","Alert","severity","setAnnotationQueryCtrl","h5","grow","Input","currentTarget","placeholder"],"sourceRoot":""}